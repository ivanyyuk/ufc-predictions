body {
  margin: 0 auto;
  padding: 0;
  width:90vw;
  /*font-family: sans-serif;*/
  /*background-color: #ffb700;*/
}

/** {*/
  /*box-sizing: border-box; }*/

@media only screen and (max-width: 480px) {
    h1 {
        font-size: 24px;
    }
}

img {
  max-width: 100%;
}


.logo {
  background-color: #001f3f;
  margin:0;
  padding:0;
  top: 0;
  left: 0;
  width: 100%
}

.logo a {
  color:white;

}

.event-info {
}

.event-card {
  -webkit-transition: width 0.3s ease, margin 0.3s ease;
  -moz-transition: width 0.3s ease, margin 0.3s ease;
  -o-transition: width 0.3s ease, margin 0.3s ease;
  transition: width 0.3s ease, margin 0.3s ease;
}

@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}

.versus-page{
  /*display:flex;*/
  /*flex-direction: row;*/
  /*justify-content: center;*/
  /*width:90vw;*/
  /*flex-wrap: wrap;*/
  /*margin: 5px;*/
}

.versus-item {
  /*width: 100%;*/
  /*display: flex;*/
  /*flex-direction: row;*/
  /*justify-content: space-around;*/
  /*width: 30vw;*/
}


/*.versus-page img{*/
/*float:right;*/
/*}*/

/*.fighter {*/
/*display:inline-block;*/
/*float:left;*/
/*}*/
